//CreditAccount.h

#ifndef _CREDITAACOUNT_H_
#define _CREDITACCOUNT_H_
#include<iostream>
#include<string>
#include"Date.h"
#include"Accumulator.h"
#include"Account.h"
class CreditAccount : public Account {
private:
	Accumulator m_acc;		//日积累量
	double m_credit;	//信用额度
	double m_rate;		//利率
	double m_fee;	//年费
public:
	double getDebt() const {		//获得欠款额
		double balance = getBalance(); 
		return (balance < 0 ? balance : 0);
	}		
	CreditAccount(Date date, std::string id, double credit, double rate, double fee) : m_credit(credit), m_rate(rate), m_fee(fee), Account(date, id), m_acc(date, 0) {}
	double getCredit() const { return m_credit; }
	double getRate() const { return m_rate; }
	double getFee() const { return m_fee; }
	double getAvailableCredit() {	//获得可用信用
		m_credit += getDebt();
		return (m_credit > 0 ? m_credit : 0);
	};	
	void deposit(Date date, double amount, std::string message);	//存入金额
	void withdraw(Date date, double amount, std::string message);	//取出金额
	void settle(Date date);		//结算利息
	void show();		//展示信息

};

#endif
